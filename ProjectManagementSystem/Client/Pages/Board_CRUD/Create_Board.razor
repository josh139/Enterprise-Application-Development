@page "/create_board"

@inject NavigationManager Navigation
@inject HttpClient Http

<div>
    <button class="btn btn-outline-secondary oi oi-arrow-left" @onclick="GoToHome"></button>
    <h3 class="text-center">Create Board</h3>
</div>

<hr />

<EditForm Model="Board" OnValidSubmit="@HandleValidSubmit">
    <ObjectGraphDataAnnotationsValidator />

    <div class="form-group row">
        <label for="Company" class="col-sm-2 col-form-label">Company</label>
        <div class="col-sm-10">
            <InputSelect id="Company" class="form-control" @bind-Value="Board.CompanyId">
                <option value="" selected>Company</option>
                @foreach (var company in Companies)
                {
                    <option value="@company.Id">@company.Name</option>
                }
            </InputSelect>
            <ValidationMessage For="@(() => Board.CompanyId)" />
        </div>
    </div>

    <div class="form-group row">
        <label for="Name" class="col-sm-2 col-form-label">Name</label>
        <div class="col-sm-10">
            <InputText id="Name" class="form-control" placeholder="Name" @bind-Value="Board.Name" />
            <ValidationMessage For="@(() => Board.Name)" />
        </div>
    </div>

    <div class="form-group row">
        <label for="Description" class="col-sm-2 col-form-label">Description</label>
        <div class="col-sm-10">
            <InputText id="Description" class="form-control" placeholder="Description" @bind-Value="Board.Description" />
            <ValidationMessage For="@(() => Board.Description)" />
        </div>
    </div>

    <hr />

    <div class="row justify-content-md-center">
        <button type="submit" class="btn btn-primary">Submit</button>
    </div>
</EditForm>

        @code {
            private void GoToHome()
            {
                Navigation.NavigateTo("/");
            }

            private Board Board { get; set; } = new Board();

            private List<Company> Companies = new List<Company>();

            protected override async Task OnInitializedAsync()
            {
                try
                {
                    Companies = await Http.GetFromJsonAsync<List<Company>>("api/Companies");
                }
                catch (Exception ex)
                {
                    Console.WriteLine(ex.Message);
                }
            }

            private async void HandleValidSubmit()
            {
                try
                {
                    Console.WriteLine("VALID SUBMIT!");

                    Board newBoard = new Board(Board.Name, Board.Description, Board.CompanyId);

                    var response = await Http.PostAsJsonAsync("/api/Boards", newBoard);
                    response.EnsureSuccessStatusCode();

                    Navigation.NavigateTo($"/");
                }
                catch (Exception ex)
                {
                    Console.WriteLine(ex.Message);
                }
            }
        }
